{
  "rules": {
    
    // Rate limiting helpers
    ".functions": {
      "isRateLimited": "(userId, path, intervalMinutes, maxRequests) => {
        let now = now();
        let windowStart = now - (intervalMinutes * 60 * 1000);
        let recent = root.child('rateLimits').child(userId).child(path);
        return recent.child('lastActionTime').val() > windowStart && 
               recent.child('actionCount').val() >= maxRequests;
      }",
      "isValidString": "(str, minLen, maxLen) => {
        return str != null && str.length >= minLen && str.length <= maxLen && 
               !str.matches('.*[<>\"\\'].*');
      }",
      "isValidEmail": "(email) => {
        return email != null && email.matches('^[\\\\w\\\\.-]+@[\\\\w\\\\.-]+\\\\.[\\\\w]+$') && 
               email.length <= 254;
      }",
      "isValidCoordinates": "(lat, lng) => {
        return lat != null && lng != null && lat >= -90 && lat <= 90 && 
               lng >= -180 && lng <= 180;
      }"
    },
    
    // Rate limiting data
    "rateLimits": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid"
      }
    },
    
    // Security audit log
    "auditLog": {
      "$logId": {
        ".write": "auth != null",
        ".read": "auth.token.admin === true"
      }
    },
    
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid && newData.hasChildren(['displayName', 'email']) && 
                   newData.child('email').val() === auth.token.email &&
                   newData.child('displayName').val().length >= 1 && 
                   newData.child('displayName').val().length <= 100 &&
                   !newData.child('displayName').val().matches('.*[<>\"\\'].*')",
        
        "profile": {
          ".read": "$uid === auth.uid || (auth != null && 
                   root.child('users').child($uid).child('profile').child('isPublic').val() === true &&
                   root.child('users').child($uid).child('profile').child('displayName').val().length <= 100)",
          ".write": "$uid === auth.uid && 
                    (!newData.child('displayName').exists() || 
                     (newData.child('displayName').val().length >= 1 && 
                      newData.child('displayName').val().length <= 100 &&
                      !newData.child('displayName').val().matches('.*[<>\"\\'].*')))"
        },
        
        "emergencyContacts": {
          "$contactId": {
            ".read": "$uid === auth.uid",
            ".write": "$uid === auth.uid && 
                      newData.hasChildren(['contactUserId']) &&
                      (!newData.child('nickname').exists() || 
                       (newData.child('nickname').val().length <= 50 &&
                        !newData.child('nickname').val().matches('.*[<>\"\\'].*'))) &&
                      (!newData.child('relationship').exists() || 
                       (newData.child('relationship').val().length <= 30 &&
                        !newData.child('relationship').val().matches('.*[<>\"\\'].*')))"
          }
        },
        
        "settings": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        }
      }
    },
    
    "presence": {
      "$uid": {
        ".read": "auth != null",
        ".write": "$uid === auth.uid",
        ".validate": "newData.hasChildren(['isOnline', 'lastSeen']) && 
                     newData.child('isOnline').isBoolean() &&
                     newData.child('lastSeen').isNumber()"
      }
    },
    
    "alerts": {
      "$alertId": {
        ".read": "auth != null && (data.child('fromUserId').val() === auth.uid || 
                 data.child('toUserIds').child(auth.uid).exists() ||
                 data.child('contactIds').child(auth.uid).exists())",
        ".write": "auth != null && (!data.exists() || data.child('fromUserId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['type', 'message', 'fromUserId', 'timestamp']) && 
                     (newData.child('type').val() === 'help' || newData.child('type').val() === 'danger') &&
                     newData.child('message').val().length >= 1 && 
                     newData.child('message').val().length <= 500 &&
                     !newData.child('message').val().matches('.*[<>\"\\'].*') &&
                     newData.child('fromUserId').val() === auth.uid &&
                     (!newData.child('location').exists() || 
                      (newData.child('location').child('lat').isNumber() &&
                       newData.child('location').child('lng').isNumber() &&
                       newData.child('location').child('lat').val() >= -90 &&
                       newData.child('location').child('lat').val() <= 90 &&
                       newData.child('location').child('lng').val() >= -180 &&
                       newData.child('location').child('lng').val() <= 180))",
        
        "responses": {
          "$responseId": {
            ".read": "auth != null && (data.child('fromUserId').val() === auth.uid ||
                     root.child('alerts').child($alertId).child('fromUserId').val() === auth.uid)",
            ".write": "auth != null && (!data.exists() || data.child('fromUserId').val() === auth.uid)",
            ".validate": "newData.hasChildren(['message', 'fromUserId', 'timestamp']) &&
                         newData.child('message').val().length >= 1 && 
                         newData.child('message').val().length <= 300 &&
                         !newData.child('message').val().matches('.*[<>\"\\'].*') &&
                         newData.child('fromUserId').val() === auth.uid"
          }
        }
      }
    },
    
    "friendRequests": {
      "$requestId": {
        ".read": "auth != null && (data.child('fromUserId').val() === auth.uid || 
                 data.child('toUserId').val() === auth.uid)",
        ".write": "auth != null && ((!data.exists() && newData.child('fromUserId').val() === auth.uid) ||
                  (data.exists() && data.child('toUserId').val() === auth.uid))",
        ".validate": "newData.hasChildren(['fromUserId', 'toUserId', 'status', 'createdAt']) &&
                     (newData.child('status').val() === 'pending' || 
                      newData.child('status').val() === 'accepted' || 
                      newData.child('status').val() === 'declined' ||
                      newData.child('status').val() === 'blocked') &&
                     (!newData.child('fromUserEmail').exists() || 
                      newData.child('fromUserEmail').val().matches('^[\\\\w\\\\.-]+@[\\\\w\\\\.-]+\\\\.[\\\\w]+$')) &&
                     (!newData.child('toUserEmail').exists() || 
                      newData.child('toUserEmail').val().matches('^[\\\\w\\\\.-]+@[\\\\w\\\\.-]+\\\\.[\\\\w]+$'))"
      }
    },
    
    "chats": {
      "$chatId": {
        ".read": "auth != null && root.child('chats').child($chatId).child('participants').child(auth.uid).exists()",
        ".write": "auth != null && (root.child('chats').child($chatId).child('participants').child(auth.uid).exists() ||
                  (!data.exists() && newData.child('participants').child(auth.uid).exists()))",
        ".validate": "(!newData.exists() || 
                     (newData.hasChildren(['participants', 'createdAt', 'type']) &&
                      (newData.child('type').val() === 'direct' || 
                       newData.child('type').val() === 'group' || 
                       newData.child('type').val() === 'emergency')))",
        
        "messages": {
          "$messageId": {
            ".read": "auth != null && root.child('chats').child($chatId).child('participants').child(auth.uid).exists()",
            ".write": "auth != null && (!data.exists() || data.child('fromUserId').val() === auth.uid)",
            ".validate": "newData.hasChildren(['message', 'fromUserId', 'timestamp']) &&
                         newData.child('message').val().length >= 1 && 
                         newData.child('message').val().length <= 1000 &&
                         !newData.child('message').val().matches('.*[<>\"\\'].*') &&
                         newData.child('fromUserId').val() === auth.uid"
          }
        },
        
        "participants": {
          ".read": "auth != null",
          ".write": "auth != null && (data.child(auth.uid).exists() || newData.child(auth.uid).exists())"
        }
      }
    },
    
    "locations": {
      "$uid": {
        ".read": "auth != null && ($uid === auth.uid || 
                 root.child('alerts').orderByChild('fromUserId').equalTo($uid).exists())",
        ".write": "$uid === auth.uid",
        ".validate": "newData.hasChildren(['lat', 'lng', 'timestamp']) &&
                     newData.child('lat').isNumber() && 
                     newData.child('lng').isNumber() &&
                     newData.child('lat').val() >= -90 && 
                     newData.child('lat').val() <= 90 &&
                     newData.child('lng').val() >= -180 && 
                     newData.child('lng').val() <= 180 &&
                     (!newData.child('address').exists() || 
                      (newData.child('address').val().length <= 200 &&
                       !newData.child('address').val().matches('.*[<>\"\\'].*')))"
      }
    },
    
    "emergencyGroups": {
      "$groupId": {
        ".read": "auth != null && (data.child('members').child(auth.uid).exists() || 
                 data.child('admins').child(auth.uid).exists())",
        ".write": "auth != null && (data.child('admins').child(auth.uid).exists() || 
                  (!data.exists() && newData.child('admins').child(auth.uid).exists()))",
        ".validate": "newData.hasChildren(['name', 'admins', 'members', 'createdAt', 'type']) &&
                     newData.child('name').val().length >= 3 && 
                     newData.child('name').val().length <= 100 &&
                     !newData.child('name').val().matches('.*[<>\"\\'].*') &&
                     (newData.child('type').val() === 'family' || 
                      newData.child('type').val() === 'work' || 
                      newData.child('type').val() === 'neighborhood' || 
                      newData.child('type').val() === 'custom')"
      }
    },
    
    "safeZones": {
      "$uid": {
        "$zoneId": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          ".validate": "newData.hasChildren(['name', 'center', 'radiusMeters', 'type', 'createdAt']) &&
                       newData.child('name').val().length >= 1 && 
                       newData.child('name').val().length <= 100 &&
                       !newData.child('name').val().matches('.*[<>\"\\'].*') &&
                       (newData.child('type').val() === 'home' || 
                        newData.child('type').val() === 'work' || 
                        newData.child('type').val() === 'school' || 
                        newData.child('type').val() === 'hospital' || 
                        newData.child('type').val() === 'custom') &&
                       newData.child('center').child('lat').isNumber() &&
                       newData.child('center').child('lng').isNumber() &&
                       newData.child('center').child('lat').val() >= -90 &&
                       newData.child('center').child('lat').val() <= 90 &&
                       newData.child('center').child('lng').val() >= -180 &&
                       newData.child('center').child('lng').val() <= 180 &&
                       newData.child('radiusMeters').isNumber() &&
                       newData.child('radiusMeters').val() >= 10 &&
                       newData.child('radiusMeters').val() <= 5000"
        }
      }
    },
    
    "notifications": {
      "$uid": {
        "$notificationId": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid",
          ".validate": "newData.hasChildren(['type', 'title', 'message', 'createdAt']) &&
                       newData.child('title').val().length >= 1 && 
                       newData.child('title').val().length <= 100 &&
                       !newData.child('title').val().matches('.*[<>\"\\'].*') &&
                       newData.child('message').val().length >= 1 && 
                       newData.child('message').val().length <= 500 &&
                       !newData.child('message').val().matches('.*[<>\"\\'].*') &&
                       (newData.child('type').val() === 'alert_sent' || 
                        newData.child('type').val() === 'alert_received' || 
                        newData.child('type').val() === 'friend_request_sent' || 
                        newData.child('type').val() === 'friend_request_received' || 
                        newData.child('type').val() === 'contact_added' ||
                        newData.child('type').val() === 'system')"
        }
      }
    },
    
    "onlineUsers": {
      ".read": "auth != null",
      ".write": false
    },
    
    "systemStatus": {
      ".read": "auth != null",
      ".write": "auth.token.admin === true"
    }
  }
}